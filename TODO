Basic things that need to be done.
	Termcap or terminfo support for keybindings (do we really need this?).
	Backgrounding of commands with job control (pause/resume/kill).
	Fix window resizing (I think it's almost done).
	Handle commands that are too long to be passed directly to the shell.
	Make ga work in background.
	Think about good key for creating links (like pl in ranger, al, rl).
    Make :ch +x work like :!chmod +x %f. Create Change dialog and add :chmod,
        :chown commands.
    %something for absolute filenames.
    More states for permissions dialog (maybe 'f', 'd').
    Backgrounding of vicmd (& at the end).
    Perform operations using system calls, not programs.  This is much faster
        and will ease porting on Windows (less dependencies on Cygwin).
	:restore command to restore files from Trash
    Modify X in permissions dialog.
    Be more verbose about regexp compiling errors.
    Show search matches in the menus.
    Better cW command (maybe accept count of extensions to skip).

Documentation.
	Better documentation.
    Document using P to move files on fs different from where /home is.
    Document command line keys.

Vi(m) specific features that need to be added.
	Fix '' to go back to all jumps G gg links (in one directory?).
	Change file list filters to use fold levels instead of just
		the dot filter and regular expression filter (what does this mean?).
	Add :s/pattern/replace/ command.
    Add one more color to color scheme for error messages in status bar.
    Some kind of selection mode (multible blocks, mixing).
    gs to work with t selection just like gv with visual mode selection.
    Add :mksession command and 'sessionoptions' option.
    Make dirstack persistent (session and vifminfo).
    Save registers (session and vifminfo).
    :highlight command.
    Better registers support.
    d /, d ?
    :map without arguments
    Should 'history' control search and cmdline history or there should be
        other options?

Possible things to add.
	Use system wide mimetypes file. /etc/mailcap?
	Virtual File System - currently vifm can use fuse to mount most
		file systems.
	Add mouse support.
    Swap names of two files (selected or given as arguments).
    Invert selection?
    :g/arg = grep arg; :v/arg = grep -v arg
    Make :undolist more interactive.
    A :restart command to reload everything.
    Maybe something like :g/.../ and :v/.../ in Vim.
    Add g/ and g? commands (search, but don't select files).
    Reverse searching (/ for search, g/ for selecting, g!/ for selecting
        reverse)
    Improve sorting ('sort' and 'gsort'; ignore case).
    Reset options to it's default value (from docs) with set option&.
    :cd [dir1] [dir2]; :cd! dir equivalent to :cd dir dir; or :gcd
    cl key to modify links.
    What about yD to copy selected file(s) into other directory, and YD to move

Other (questionable) things.
    Use mimetypes in FILETYPE.
    %i macro to prompt user for input.
    Maybe inotify support on Linux.
    Command like ' but that executes bookmark ?
    Maybe we should add a command to view screen ?
    Completion for co and cg commands ?
    Directory create command ?
    Summarize size of selected files.  Need to decide how to display it.
    Add support for comments at the end of line ? Just for fun?
    Make directory stack menu interactive ?
    With undo groups we can not only join commands, but maybe implement
        something like transaction rollback.  Or maybe better to leave this
        for user, he could always press u himself.
    Maybe add + and - commands to undo by commands, not command groups.
    :sellocal command.
    :split directory
    Highlight for view window (see ranger).
    Remove items from :history cmd?
    Option with format of statwin.
    :edit, etc. in menus.
    :alias
    Like gv but to select just pasted files (gp?).
    Ctrl-W in command line mode like in vim?
    'expandtab' for tabs in the quick view ?

Code improvements.
    Write more tests.
    Think about escape_filename and it's len argument.
    Rename exec_* to something.
    Improve logging.
    Stay at the same file in some cases.
