*vifm.txt*


|Commands|           How to use and set :commands.
|Filters|            Using the file filters.
|Mappings|           Special sequences.
|Configure|          Configuration of vifm.
|Marks|              Bookmarking of files.
|Movement|           How to move around.
|Normal|             Normal mode keys.
|Menus_and_dialogs|  Keys for menus and dialogs.
|Options|            Command line arguments.
|Plugin|             Using the vifm.vim plugin.
|Compatibility_mode| Its description.
|Reserved|           List of reserved commands.
|Vifm_Ranges|        How to use ranges in vifm.
|set-options|        Available options.

--------------------------------------------------------------------------------
*Commands*

Commands are set with :com command_name command_action<Return>
:com! command_name command_action - will overwrite a previously set command.
:delc[ommand] command_name - will remove the command.

Commands are executed with :command_name<Return>
	Command names do not have to start with a capital letter.
	Trying to use a reserved command name will result in an error msg.
	See |Reserved| for a list of reserved command names.

:com<Return> creates a menu of user commands.

The builtin commands are:

:!program - shellout and execute program.
:!!program - same as :! but will pause before returning.
  This will be changed for compatibility with vim.
  :!! - repeat the last command.
  :!!program - will pause before returning.
:apropos manpage - will create a menu of items returned by the apropos
  command.  Selecting an item in the menu will open the corresponding
	manpage.
:change - create a menu window to alter a files properties.
:cd - change to your home directory.
	:cd /usr/local - change directory to /usr/local.
:cmdhistory - show command line history menu.
:colo[rscheme] - gives a menu with a list of available color schemes.  You can
        choose default color scheme here.  It will be used if no DIRECTORY in
        colorscheme file doesn't fit current path.  See :colorscheme.
:colo[rscheme] color_scheme_name - changes default color scheme.
:[range]d[elete][count] - delete selected file or files.
	See |Vifm_Ranges| for the ranges implemented.
:delcommand user_command - remove user_command.
:display or :register - popup menu with registers content.
:dirs - display directory stack.
:rename - rename files using vi to edit names.
:edit [file...] - will load the selected or passed file or files into vi.
:empty - permanently remove files from the ~/.vifm/Trash directory.
:file - popup menu of programs set for the file type of the current file.
        Add ' &' in the end of command if you want to start program in background. 
:filter regular_expression - will filter files matching the pattern out of
	the directory.  Use :filter to show all files.  See |Filters|
:h[elp] - show this help file.
	:h argument - is the same as using ':h argument' in vim.
:history - show directory history.
:invert - invert file name filter.
:jobs - shows menu of current backgrounded processes.
:locate filename - uses the locate command to create a menu of filenames
	Selecting a file from the menu will reload the current file list in vifm
	to show the selected file.
:marks - menu of bookmarks.
:only - switch to a one window view.
:popd - remove pane directories from stack.
:pushd directory - add pane directories to stack.
:pwd - show the present working directory.
:q[uit] - will exit vifm (add ! if you don't want to save changes).
:screen - toggles whether to use the screen program or not.
:set opt1=val1 opt2=val2 - sets given options.
:shell - will start a shell.
:sort - menu of different sorting methods.
:sp[lit] - switch to a two window view.
:sync - change the other panel to the current panels directory.
:view - toggle on and off the quick file view.
:w - same as :write.
:wq - will exit vifm after writing config.
:w[rite] - will write config (add ! to force write even if settings weren't
	changed).
:x - exit vifm (add ! if you don't want to save changes).

command macros:
  %a user arguments.
  %c the current file under the cursor.
  %C the current file under the cursor in the other directory.
  %f all of the selected files.
  %F all of the selected files in the other directory list.
  %b same as %f %F.
  %d current directory name.
  %D other file list directory name.
  %m show command output in a menu.
  %s execute command in screen split.

The command macros may be used in user commands.
:com move mv %f %D - would set the :move command to move all of the files
selected in the current directory to the other directory.

The %a macro will substitute any arguments given in a command into the
command.  All arguments are considered optional.
:com lsl !!ls -l %a - will set the lsl command to execute ls -l with or
without an argument.

:lsl<Return> will list the directory contents of the current directory.
:lsl filename<Return> will list only the given filename.

The macros can also be used in directly executing commands.
:!mv %f %D - would move the current directory selected files to the other
directory.

Appending & to the end of a command will cause it to be executed in the
background.

:!mv %f %D &

--------------------------------------------------------------------------------
*Filters*

There are two basic file filters.  One for dot files and one for file names.

The basic vim folding key-bindings are used for filters.
za - toggles the showing and hiding of dot files.
zo - show the dot files.
zf - add the selected files to the file name filter.
zm - hide the dot files.
zO - show the hidden file name files.
zM - restore all filters.
zR - remove all filters.

Note: vifm uses extended regular expressions.

--------------------------------------------------------------------------------
*Mappings*

Since it's not easy to enter special characters there are several special
sequences that can be used in place of them. They are:

<cr> - Enter key
<space> - Space key
<f0> - <f63> - functional keys

--------------------------------------------------------------------------------
*Marks*

:marks - will create a menu of the current marks.
m[letter] will set a mark at the current cursor position.
'[letter] will move to a mark.

--------------------------------------------------------------------------------
*Movement*

k is up
j is down

h is up directory
l is handle file and is the same as Return

gg will move to the first line of the file list.

G will move to the last line in the file list.

H - move to the first file in the window.
M - move to the file in the middle of the window.
L - move to the last file in the window.

Space or Tab to switch file lists.

Most movement commands also accept a count 12j would move down 12 files.
[count]% move to percent of the file list.
[count]j move down count files.
[count]k move up count files.
[count]G or gg move to list position count.

j, k, gg, G, H, L, M can be used as selectors for several commands.
Also following selectors can be used:
 a - all files in current view
 s - selected files
 S - all files except selected
For example:
dj delete file under cursor and one below.
d2j delete file under cursor and two below.
y6gg yank all files from cursor position to 6th file in the list.

--------------------------------------------------------------------------------
*Normal*

/regular expression - select files matching regular expression. Forward
    search.
?regular expression - select files matching regular expression. Backward
    search.
n - previous file matching last search pattern.  Considers last search
    direction.
N - previous file matching last search pattern.  Considers last search
    direction.
cg - change group of file.
co - change owner of file.
cp - change file permissions.
cw - change word is used to rename a file.
cW - change WORD is used to change only name of file (without extension).
C - clone file.
dd - move selected file or files to ~/.vifm/Trash (if option USE_TRASH is set
     otherwise delete)
d<selector> - like dd.
DD and D<selector> - like dd and d<selector>, but omitting trash directory
     (even when option USE_TRASH is set).
f, F, ;, <comma> - search by first character in filename.
ga - calculate size of directory.
gA - like ga, but force update.
gv go to visual mode restoring last selection.
yy, Y - yank selected files.
y<selector> - yank files.
p - put last selected files.
P - move yanked files.
t - select or unselect a file.
u - undo last command.
Ctrl-r - redo last command.
v, V - start visual selection of files.
<Return>, l - handle file (run executable when RUN_EXECUTABLE is set).
i - handle file (even through it's executable and RUN_EXECUTABLE is set).
ZQ - same as :q<Return>
ZZ - same as :wq<Return>
zt - redraw pane with file in top of list.
zz - redraw pane with file in center of list.
zb - redraw pane with file in bottom of list.
. - repeat last command line command (not normal mode command).
Ctrl-w h/Ctrl-w l - switch to left or right pane.
Ctrl-w Ctrl-w - switch to other pane.
Ctrl-w o - shortcut for :only
Ctrl-w v - shortcut for :split
Ctrl-w x - exchange panes
Ctrl-e/Ctrl-y - scroll pane one line down/up.

--------------------------------------------------------------------------------
*Menus_and_dialogs*

General~

j, k - move.
<Escape>, Ctrl-c - clear.
<Return>, l - select and exit the menu.

Sort dialog ~

h - switch ascending/descending.

Filetype menu~

Commands from vifmrc are displayed above empty line. When all commands below
empty line were found in .desktop files.
Note: you can't save programs for files without extension.

J and K - to move menu items
L - save all commands above empty line as program list

--------------------------------------------------------------------------------
*Options*

The vifm executable will start vifm in the current directory unless it is
given a different directory on the command line.

vifm /path/to/directory/one
or
vifm /path/to/directory/one /path/to/directory/two

The only other command line arguments are:
-f - only used from the vifm.vim script.  The selected files are written
	to ~/.vifm/vimfiles and vifm exits.

--help - show a brief command summary and exit vifm.
--version - show the version number of vifm and exit.

--------------------------------------------------------------------------------
*Configure*

The ~/.vifm/vifmrc file contains all the configurable settings.  It is
commented and you must edit it by hand to change the settings.

The ~/.vifm/startup file contains commands that will be executed on vifm
startup. You can set your mappings there.

The :screen command toggles whether to use the screen program or not.

	The default configuration has the screen option turned off.  The screen
	program uses pseudo terminals to allow multiple windows to be used in
	the console or in a single xterm.  Starting vifm from screen with the
	screen option turned on will cause vifm to open a new screen window for
	each new file edited or program launched from vifm.

	This requires screen version 3.9.9 or newer for the screen -X argument.

--------------------------------------------------------------------------------
*Plugin*  Plugin for using vifm in vim as a file selector.

Commands:

  :EditVifm  select a file to open in the current buffer.
  :SplitVifm split buffer and select a file to open.
  :VsplitVifm vertically split buffer and select a file to open.
  :DiffVifm select a file to compare to the current file with :vert diffsplit.

The plugin does not have any settings.

To use the plugin copy the vifm.vim file to either the system wide vim/plugin
directory or into ~/.vim/plugin.

If you would prefer not to use the plugin and it is in the system wide plugin
directory add

let loaded_vifm=1

to your ~/.vimrc file.

--------------------------------------------------------------------------------
*Vifm_Ranges*

The ranges implemented include:
  Numbers :2,3
  % - the entire directory.
  . - the current position in the filelist.
  $ - the end of the filelist.
  't - the mark position t.

  :%delete would delete all files in the directory.
  :2,4delete would delete the files in the list positions 2 through 4.
  :.,$delete would delete the files from the current position to the end
    of the filelist.
  :3delete4 would delete the files in the list positions 3, 4, 5, 6.

If a backward range is given :4,2delete - an error message is given and
the operation is abandoned.

The only builtin command that accepts a range is :delete.

--------------------------------------------------------------------------------
*Compatibility_mode*

Compatibility mode:
    - <tab> to switch between panes.
    - dd deletes selected (or current if none) files.
    - yy yanks selected (or current if none) files.

Vim like mode:
    - <c-i> (<tab>) to go forward on history.
    - dd deletes file under the cursor and ds works as dd in compatibility mode.
    - yy yanks file under the cursor and ys works as dd in compatibility mode.

--------------------------------------------------------------------------------
*set-options*

fastrun
type: boolean
default: false
With this option turned on you can run partially entered commands with
unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

followlinks
type: boolean
default: true
Follow links on l or Enter.

fusehome
type: string
default: "/tmp/vifm_FUSE/"
Directory to be used as a root dir for FUSE mounts.
If you change this option, vifm won't remount anything.  It affects future
mounts only.

history
type: integer
default: 15
Maximum number of directories in the view history.

iec
type: boolean
default: false
Use KiB, MiB, ... instead of KB, MB, ...

runexec
type: boolean
default: false
Run executable file on Enter or l.

savelocation
type: boolean
default: false
Start vifm in the last visited directory.

sort
type: enumeration
default: name
Sets one of these sort types:
   ext   - sort by extension
   name  - sort by name
   gid   - sort by group id
   gname - sort by group name
   mode  - sort by mode
   uid   - sort by owner id
   uname - sort by owner name
   size  - sort by size
   atime - sort by time accessed
   ctime - sort by time changed
   mtime - sort by time modified

sortnumbers
type: boolean
default: false
Natural sort of (version) numbers within text.

sortorder
type: enumeration
default: ascending
Sets sort order: ascending, descending.

trash
type: boolean
default: true
Use trash directory.

undolevels
type: integer
default: 100
Maximum number of changes that can be undone.

vicmd
type: string
default: "vim"
The actual command used to start vi.

vimhelp
type: boolean
default: false
Use vim help format.

wrap
type: boolean
default: true
Controls whether to wrap text in quick view.

--------------------------------------------------------------------------------
*Reserved*

The following command names are reserved and cannot be used for user commands.

  ! - shellout and execute command.
  apropos - run the apropos command in a menu window.
  cd - change directory.
  change - alter a files properties.
  cmap - user mapping for command line mode.
  cmdhistory - show command line history menu.
  colo - will be used to set a colorscheme for a directory.
  colorscheme - will be used to set a colorscheme for a directory.
  com - show user commands.
  command - show user commands.
  d - delete file.
  delcommand - delete command.
  delete - delete file.
  dirs - display directory stack.
  display - popup menu with registers content.
  e - edit file.
  edit - edit file.
  empty - empty trash directory.
  file - show filetypes menu.
  filter - set file name filter.
  find - not yet implemented.
  h - show help file.
  help - show help file.
  history - show directory history.
  invert - invert file filter.
  jobs - shows menu of current backgrounded processes.
  locate - run the locate command in a menu window.
  ls - not implemented.
  map - user mapping for normal and visual modes.
  marks - show marks.
  nmap - user mapping for normal mode.
  noh - clear selection in current pane.
  nohlsearch - clear selection in current pane.
  only - switch to a one window view.
  popd - remove pane directories from stack.
  pushd - add pane directories to stack.
  pwd - show present working directory.
  q - exit vifm.
  quit - exit vifm.
  register - popup menu with registers content.
  rename - rename files using vi to edit names.
  screen - toggles use of screen program.
  set - set option.
  shell - shellout.
  sort - show sort menu.
  sp - switch to a two window view.
  split - switch to a two window view.
  sync - change the other panel to the current panel directory.
  undolist - show list of latest changes.  Add ! to see commands.
  unmap - not used, will be used with key mapping.
  view - toggle on and off the quick file view.
  vifm - menu with version information.
  vmap - user key mapping for visual mode.
  w - same as :write.
  wq - will exit vifm after writing config.
  write - write config (add ! to force write even if settings weren't changed).
  x - exit vifm.
  yank - yank file.

--------------------------------------------------------------------------------
 vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl:
