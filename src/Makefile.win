CC := gcc

CFLAGS := -c -g -O0 -Wall -Werror -MD $(CFLAGS)

LDFLAGS := $(LDFLAGS)

LIBS := -lregex -lpdcurses -lnetapi32 -lpthread -lws2_32

vifm_SOURCES := background.c bookmarks.c change_dialog.c cmdline.c cmds.c \
                color_scheme.c commands.c completion.c config.c dir_stack.c \
                file_info.c file_magic.c filelist.c fileops.c filetype.c ipc.c \
                keys.c log.c main_loop.c menu.c menus.c modes.c normal.c ops.c \
                opt_handlers.c options.c permissions_dialog.c registers.c \
                search.c signals.c sort.c sort_dialog.c status.c \
                string_array.c tags.c trash.c tree.c ui.c undo.c utf8.c \
                utils.c variables.c version.c view.c vifmres.o vifm.c visual.c

vifm_OBJECTS := $(vifm_SOURCES:.c=.o)
vifm_EXECUTABLE := vifm.exe

converter_SOURCES := vifmrc-converter.c
converter_OBJECTS := $(converter_SOURCES:.c=.o)
converter_EXECUTABLE := vifmrc-converter.exe

win_helper_SOURCES := win_helper.c
win_helper_OBJECTS := $(win_helper_SOURCES:.c=.o)
win_helper_EXECUTABLE := win_helper.exe

.PHONY: version

all: ../config.h version $(vifm_EXECUTABLE) $(converter_EXECUTABLE) \
	$(win_helper_EXECUTABLE)

$(vifm_EXECUTABLE): $(vifm_OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS) $(LIBS)
$(converter_EXECUTABLE): $(converter_OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS)
$(win_helper_EXECUTABLE): $(win_helper_OBJECTS)
	$(CC) $^ -o $@ $(LDFLAGS)

vifm.res: vifm.rc ../data/vifm.ico
	windres --use-temp-file -i ./vifm.rc -o vifm.res

vifmres.o: vifm.res
	windres --use-temp-file -i ./vifm.res -o vifmres.o

../config.h:
	@echo Creating sample ../config.h
	echo '#define VERSION "0.7.1"' > ../config.h; \
	echo '#define ENABLE_EXTENDED_KEYS' >> ../config.h; \
#	echo '#define ENABLE_COMPATIBILITY_MODE' >> ../config.h; \
#	echo '#define HAVE_FILE_PROG' >> ../config.h; \

utils.c: version.c

version.c: version

version:
	@if [ "x$$(whereis git)" != "x" ] ; then \
		/bin/echo -n 'const char GIT_HASH[] = "' > version.c; \
		/bin/echo -n `git rev-parse HEAD` >> version.c; \
		/bin/echo '";' >> version.c; \
	else \
		/bin/echo -n 'const char GIT_HASH[] = "";' > version.c; \
	fi

.c.o:
	$(CC) $(CFLAGS) $< -o $@

clean:
	rm *.o

include $(wildcard *.d)
